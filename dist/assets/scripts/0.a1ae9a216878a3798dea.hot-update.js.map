{"version":3,"sources":["webpack:///./app/blocks/input/input.js?c571"],"names":["inputs","document","querySelectorAll","mask","value","output","i","length","push","join","unmask","replace","RegExp","keydownHandler","e","oldValue","target","inputHandler","el","newValue","match","regex"],"mappings":";;;;;;;;;;;mBAAe,YAAM;AACpB,MAAIA,SAASC,SAASC,gBAAT,CAA0B,sBAA1B,CAAb;;AAEA,MAAIC,OAAO,SAAPA,IAAO,CAACC,KAAD,EAAW;AACrB,OAAIC,SAAS,EAAb;;AAEA,QAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACtC,QAAIA,MAAM,CAAN,IAAWA,IAAI,CAAJ,KAAU,CAAzB,EAA4B;AAC3BD,YAAOG,IAAP,CAAY,GAAZ;AACA;AACDH,WAAOG,IAAP,CAAYJ,MAAME,CAAN,CAAZ;AACA;;AAED,UAAOD,OAAOI,IAAP,CAAY,EAAZ,CAAP;AACA,GAXD;;AAaA,MAAIC,SAAS,SAATA,MAAS,CAACN,KAAD,EAAW;AACvB,OAAIC,SAASD,MAAMO,OAAN,CAAc,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAAd,EAAwC,EAAxC,CAAb;AACA,UAAOP,MAAP;AACA,GAHD;;AAKA,MAAIQ,iBAAiB,SAAjBA,cAAiB,CAASC,CAAT,EAAY;AAChCC,cAAWD,EAAEE,MAAF,CAASZ,KAApB;AACA,GAFD;;AAIA,MAAIa,eAAe,SAAfA,YAAe,CAASH,CAAT,EAAY;AAC9B,OAAII,KAAKJ,EAAEE,MAAX;AAAA,OACCG,WAAWD,GAAGd,KADf;;AAGAe,cAAWT,OAAOS,QAAP,CAAX;;AAEA,OAAGA,SAASC,KAAT,CAAeC,KAAf,CAAH,EAA0B;AACzBF,eAAWhB,KAAKgB,QAAL,CAAX;AACAD,OAAGd,KAAH,GAAWe,QAAX;AACA,IAHD,MAGO;AACND,OAAGd,KAAH,GAAWW,QAAX;AACA;AACD,GAZD;AAaA,E","file":"0.a1ae9a216878a3798dea.hot-update.js","sourcesContent":["export default () => {\r\n\tlet inputs = document.querySelectorAll('.input_digit-pretify');\r\n\r\n\tlet mask = (value) => {\r\n\t\tlet output = [];\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\tif (i !== 0 && i % 4 === 0) {\r\n\t\t\t\toutput.push(' ')\r\n\t\t\t}\r\n\t\t\toutput.push(value[i]);\r\n\t\t}\r\n\r\n\t\treturn output.join[''];\r\n\t}\r\n\r\n\tlet unmask = (value) => {\r\n\t\tvar output = value.replace(new RegExp(/[^\\d]/, 'g'), '');\r\n\t\treturn output;\r\n\t}\r\n\r\n\tlet keydownHandler = function(e) {\r\n\t\toldValue = e.target.value;\r\n\t}\r\n\t\r\n\tlet inputHandler = function(e) {\r\n\t\tlet el = e.target,\r\n\t\t\tnewValue = el.value;\r\n\r\n\t\tnewValue = unmask(newValue);\r\n\t\t\r\n\t\tif(newValue.match(regex)) {\r\n\t\t\tnewValue = mask(newValue);\r\n\t\t\tel.value = newValue;\r\n\t\t} else {\r\n\t\t\tel.value = oldValue;\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/blocks/input/input.js"],"sourceRoot":""}